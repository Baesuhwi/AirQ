<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yjc.airq.mapper.ManageMapper">

<!-- 	<select id="remoteReg" resultType="com.yjc.airq.domain.IotVO">
		select * from IOT
	</select> -->

	<!-- 원격 메인화면에 뿌려주기 -->
	<select id="iotMain" resultType="com.yjc.airq.domain.IotInfoVO">
		select i.iot_id, m.member_id, mo.model_name, i.place_name
		from iot_info i, model mo, member m
		where m.member_id = #{member_id}
		and m.member_id = i.member_id
		and i.model_id = mo.model_id
	</select>

	<!-- 원격 제어 등록 -->
	<insert id="iotInfoInsert" parameterType="com.yjc.airq.domain.IotInfoVO">
		insert into iot_info(iot_id, out_whether, place_name, measure_cycle, location_x, location_y, ip, port, member_id, model_id)
		values(#{iot_id}, 'y', #{place_name}, 1, '100', '100', '39.127.7.68', 80, #{member_id}, #{model_id})
	</insert>
	
	<!-- 자신 원격제품 고유 닉네임 중복 체크 -->
	<select id="nCheck" resultType="com.yjc.airq.domain.IotInfoVO">
 		select iot_id from iot_info where iot_id = #{alias}
	</select>
	
	<!-- 미세먼지 측정 데이터 저장 -->
	<insert id="measureData" parameterType="map">
		insert into measure_data(measure_data_code, measure_value, measure_time, iot_id, matter_code)
		values(to_number(to_char(systimestamp,'YYMMDD')||to_char(data_code.nextval,'fm0000')),
		#{msd.measure_value},
		systimestamp,
		#{msd.iot_id},
		'PM10')
	</insert>
	
	<!-- 오늘 날짜의 데이터 보여주는거 -->
	<select id="insideChart" resultType="com.yjc.airq.domain.MeasureDataVO">
		select MD.MEASURE_VALUE as measure, to_char(MD.MEASURE_TIME, 'yyyy-mm-dd') as TODAY,
		to_char(MD.MEASURE_TIME, 'yyyy-mm-dd HH24:MI') as measuretime, MD.IOT_ID as iotID, MD.MATTER_CODE as CODE
		from MEASURE_DATA MD, IOT_INFO I, MEMBER M
		where M.member_id = #{member_id}
		and M.member_id = I.member_id
		and I.iot_id = MD.iot_id
		and to_char(MD.MEASURE_TIME, 'yyyy-mm-dd') = to_char(#{date})
		order by MD.MEASURE_TIME
	</select>
	
	<!-- 실시간 차트 기본 데이터 30개 가져오기 -->
	<select id="getOldData" resultType="map">
		select measure_value value, to_char(measure_time,'YYYY-MM-DD HH24:MI:SS') time
		from(
				select measure_value, measure_time
				from measure_data
				order by measure_time desc)
		where <![CDATA[rownum <=30]]>
		order by to_char(measure_time,'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<!-- 하루 평균값 가져오기 -->
	<select id="getTodayAvgData" resultType="String">
		select nvl(to_char(avg(o.measure_value),'999.9'),0) today_avg
		from (
    		select to_char(m.measure_time,'yyyy-mm-dd') measure_time,
    		to_number(to_char(avg(measure_value),'99.9')) measure_value
    		from measure_data m, iot_info i
    		where m.iot_id=i.iot_id and member_id=#{member_id}
    		group by m.iot_id,i.member_id, to_char(m.measure_time,'yyyy-mm-dd')
    		having to_char(m.measure_time,'yyyy-mm-dd') = to_char(sysdate,'yyyy-mm-dd')
    		order by measure_time desc) o
	</select>
	
	<!-- 임계값 초과 횟수 가져오기 -->
	<select id="getOverValue" resultType="int">
		select count(*)
		from ( 
    		select to_char(m.measure_time,'yyyy-mm-dd') measure_time, to_number(to_char(avg(measure_value),'99.9')) measure_value
    		from measure_data m, iot_info i
    		where m.iot_id=i.iot_id 
   			and member_id=#{member_id}
   			group by m.iot_id,i.member_id,to_char(m.measure_time,'yyyy-mm-dd')
    		having to_char(m.measure_time,'yyyy-mm-dd') = to_char(sysdate,'yyyy-mm-dd')
    		order by measure_time desc) o
		where <![CDATA[o.measure_value > 50]]>
	</select>
	
	<!-- 월 평균 데이터 가져오기 -->
	<select id="getMonthData" resultType="map">	
		select to_char(m.measure_time,'mm') month, to_number(to_char(avg(measure_value),'99.9')) value
		from measure_data m, iot_info i
		where m.iot_id=i.iot_id 
		and member_id=#{member_id} 
		group by m.iot_id,i.member_id, to_char(m.measure_time,'mm')
		order by to_char(m.measure_time,'mm')
	</select>
	
	<!-- 요일 평균 데이터 가져오기 -->
	<select id="getDayData" resultType="map">	
		select to_char(to_date(r.day,'yyyy-mm-dd'),'dy') day, r.value
		from(
       		select to_char(m.measure_time,'yyyy-mm-dd') day, to_number(to_char(avg(measure_value),'99.9')) value
        	from measure_data m, iot_info i
        	where m.iot_id=i.iot_id 
        	and member_id=#{member_id}
        	and to_char(m.measure_time,'yyyy-mm-dd') > to_char(sysdate-7,'yyyy-mm-dd')
        	group by m.iot_id, i.member_id, to_char(m.measure_time,'yyyy-mm-dd')
        	order by to_char(m.measure_time,'yyyy-mm-dd')) r
	</select>
	
	<!-- 시간 평균 데이터 가져오기 -->
	<select id="getTimeData" resultType="map">	
		select to_char(m.measure_time,'hh24') time, to_number(to_char(avg(measure_value),'999.9')) value
		from measure_data m, iot_info i
		where m.iot_id=i.iot_id 
		and member_id=#{member_id}
		and to_char(m.measure_time,'yyyy-mm-dd') = to_char(sysdate,'yyyy-mm-dd')
		group by m.iot_id,i.member_id, to_char(m.measure_time,'hh24')
		order by to_char(m.measure_time,'hh24')
	</select>
	
	<!-- 실시간 차트 최신 데이터 가져오기 -->
	<select id="getNowData" resultType="map">
		select measure_value value, to_char(measure_time,'YYYY-MM-DD HH24:MI:SS') time
		from(
				select measure_value, measure_time
				from measure_data
				order by measure_time desc)
		where <![CDATA[rownum <=1]]>
	</select>
	
	<!-- 실시간 차트 최신 데이터 가져오기 -->
	<select id="test" resultType="map">
	</select>
</mapper>